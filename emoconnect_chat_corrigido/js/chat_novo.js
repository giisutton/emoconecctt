// ===== CHAT EMOCONNECT - VERS√ÉO COM IA REAL =====
// Vers√£o funcional com Google Gemini API para TCC

console.log("üöÄ Iniciando EmoConnect Chat com IA Real...");

// ===== CONFIGURA√á√ÉO DA IA =====
const GEMINI_API_KEY = "AIzaSyCnuGlHwY4wf-C1UhgGiNrUgbjiSsnlyBg";
const GEMINI_API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${GEMINI_API_KEY}`;

// Contexto da conversa para manter hist√≥rico
let conversaContexto = [];

// ===== VARI√ÅVEIS GLOBAIS =====
let modoChat = "user"; // "user" ou "ai"
let contatoAtivo = null;

// Lista de contatos (simula√ß√£o)
const listaContatos = [
  {
    id: 1,
    nome: "Ana Silva",
    avatar: "https://i.pravatar.cc/40?img=1",
    ultimaMensagem: "Ol√°, como voc√™ est√°?",
    status: "online"
  },
  {
    id: 2,
    nome: "Carlos Mendes", 
    avatar: "https://i.pravatar.cc/40?img=11",
    ultimaMensagem: "Consegui resolver aquele problema.",
    status: "offline"
  },
  {
    id: 3,
    nome: "Juliana Costa",
    avatar: "https://i.pravatar.cc/40?img=5", 
    ultimaMensagem: "Vamos conversar depois?",
    status: "online"
  },
  {
    id: 4,
    nome: "Rafael Almeida",
    avatar: "https://i.pravatar.cc/40?img=12",
    ultimaMensagem: "Estou me sentindo melhor hoje.",
    status: "offline"
  },
  {
    id: 5,
    nome: "Bianca Santos",
    avatar: "https://i.pravatar.cc/40?img=9",
    ultimaMensagem: "Obrigada pelo apoio!",
    status: "online"
  }
];

// ===== AGUARDAR DOM =====
document.addEventListener('DOMContentLoaded', function() {
  console.log("‚úÖ DOM carregado, inicializando chat...");
  inicializarChat();
});

// ===== FUN√á√ÉO PRINCIPAL =====
function inicializarChat() {
  try {
    // Buscar elementos
    const elementos = buscarElementos();
    if (!elementos) return;
    
    // Configurar eventos
    configurarEventos(elementos);
    
    // Mostrar contatos
    criarContatos(elementos);
    
    // Configurar modo inicial
    configurarModoInicial(elementos);
    
    console.log("‚úÖ Chat inicializado com sucesso!");
    
  } catch (error) {
    console.error("‚ùå Erro na inicializa√ß√£o:", error);
  }
}

// ===== BUSCAR ELEMENTOS DOM =====
function buscarElementos() {
  const elementos = {
    chatBox: document.getElementById('chat'),
    inputMensagem: document.getElementById('mensagemInput'),
    btnEnviar: document.getElementById('enviarBtn'),
    btnUser: document.getElementById('user-chat-btn'),
    btnAI: document.getElementById('ai-chat-btn'),
    listaContatos: document.getElementById('contacts-list'),
    containerContatos: document.querySelector('.contacts-container'),
    avatarAtivo: document.getElementById('active-contact-avatar'),
    nomeAtivo: document.getElementById('active-contact-name'),
    inputPesquisa: document.getElementById('search-contact')
  };
  
  // Verificar elementos essenciais
  const essenciais = ['chatBox', 'inputMensagem', 'btnEnviar', 'btnUser', 'btnAI'];
  for (let nome of essenciais) {
    if (!elementos[nome]) {
      console.error(`‚ùå Elemento ${nome} n√£o encontrado!`);
      return null;
    }
  }
  
  // Criar container se n√£o existir
  if (!elementos.containerContatos && elementos.listaContatos) {
    const container = document.createElement('div');
    container.className = 'contacts-container';
    container.style.cssText = 'flex: 1; overflow-y: auto; padding: 10px;';
    elementos.listaContatos.appendChild(container);
    elementos.containerContatos = container;
    console.log("‚úÖ Container de contatos criado");
  }
  
  console.log("‚úÖ Elementos encontrados");
  return elementos;
}

// ===== CONFIGURAR EVENTOS =====
function configurarEventos(elementos) {
  // Bot√£o enviar
  elementos.btnEnviar.addEventListener('click', () => enviarMensagem(elementos));
  
  // Enter no input
  elementos.inputMensagem.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') enviarMensagem(elementos);
  });
  
  // Bot√µes de modo
  elementos.btnUser.addEventListener('click', () => mudarModo('user', elementos));
  elementos.btnAI.addEventListener('click', () => mudarModo('ai', elementos));
  
  // Pesquisa de contatos
  if (elementos.inputPesquisa) {
    elementos.inputPesquisa.addEventListener('input', (e) => {
      pesquisarContatos(e.target.value, elementos);
    });
  }
  
  // Emojis
  document.querySelectorAll('.emoji-btn').forEach(btn => {
    btn.addEventListener('click', () => {
      elementos.inputMensagem.value += btn.textContent;
      elementos.inputMensagem.focus();
    });
  });
  
  console.log("‚úÖ Eventos configurados");
}

// ===== CRIAR CONTATOS =====
function criarContatos(elementos) {
  if (!elementos.containerContatos) {
    console.error("‚ùå Container de contatos n√£o dispon√≠vel");
    return;
  }
  
  console.log("üìù Criando contatos...");
  elementos.containerContatos.innerHTML = '';
  
  listaContatos.forEach(contato => {
    const div = document.createElement('div');
    div.className = 'contact-item';
    div.dataset.id = contato.id;
    
    div.innerHTML = `
      <img src="${contato.avatar}" alt="${contato.nome}" 
           onerror="this.src='https://via.placeholder.com/40x40/6a5acd/white?text=${contato.nome[0]}'">
      <div class="contact-info">
        <div class="contact-name">${contato.nome}</div>
        <div class="last-message">${contato.ultimaMensagem}</div>
      </div>
      <div class="status-indicator ${contato.status}"></div>
    `;
    
    // Click no contato
    div.addEventListener('click', () => selecionarContato(contato, elementos));
    
    elementos.containerContatos.appendChild(div);
  });
  
  console.log(`‚úÖ ${listaContatos.length} contatos criados`);
}

// ===== SELECIONAR CONTATO =====
function selecionarContato(contato, elementos) {
  console.log("üëÜ Contato selecionado:", contato.nome);
  
  // Remover active de todos
  document.querySelectorAll('.contact-item').forEach(item => {
    item.classList.remove('active');
  });
  
  // Adicionar active ao selecionado
  const itemSelecionado = document.querySelector(`[data-id="${contato.id}"]`);
  if (itemSelecionado) {
    itemSelecionado.classList.add('active');
  }
  
  // Atualizar header
  if (elementos.avatarAtivo) {
    elementos.avatarAtivo.src = contato.avatar;
    elementos.avatarAtivo.onerror = () => {
      elementos.avatarAtivo.src = `https://via.placeholder.com/36x36/6a5acd/white?text=${contato.nome[0]}`;
    };
  }
  if (elementos.nomeAtivo) {
    elementos.nomeAtivo.textContent = contato.nome;
  }
  
  // Limpar chat e mostrar mensagem inicial
  elementos.chatBox.innerHTML = '';
  adicionarMensagem(`Conversa com ${contato.nome} iniciada! üí¨`, 'received', elementos);
  
  contatoAtivo = contato;
}

// ===== MUDAR MODO (USER/AI) =====
function mudarModo(novoModo, elementos) {
  console.log(`üîÑ Mudando para modo: ${novoModo}`);
  
  modoChat = novoModo;
  
  // Atualizar bot√µes
  elementos.btnUser.classList.toggle('active', novoModo === 'user');
  elementos.btnAI.classList.toggle('active', novoModo === 'ai');
  
  // Mostrar/esconder lista de contatos
  if (elementos.listaContatos) {
    elementos.listaContatos.style.display = novoModo === 'user' ? 'flex' : 'none';
  }
  
  // Atualizar header
  if (novoModo === 'ai') {
    if (elementos.avatarAtivo) elementos.avatarAtivo.style.display = 'none';
    if (elementos.nomeAtivo) elementos.nomeAtivo.textContent = 'Assistente EmoConnect';
    
    // Limpar chat e mensagem de boas-vindas da IA
    elementos.chatBox.innerHTML = '';
    adicionarMensagem('Ol√°! Sou sua assistente virtual do EmoConnect. ü§ñ‚ú® Estou aqui para conversar sobre suas emo√ß√µes, oferecer apoio e ajudar no que precisar. Como voc√™ est√° se sentindo hoje?', 'received', elementos);
    
  } else {
    if (elementos.avatarAtivo) elementos.avatarAtivo.style.display = '';
    if (elementos.nomeAtivo) elementos.nomeAtivo.textContent = contatoAtivo ? contatoAtivo.nome : 'Chat EmoConnect';
  }
  
  // Limpar chat se mudou de modo
  if (novoModo === 'user' && elementos.chatBox.children.length > 0) {
    elementos.chatBox.innerHTML = '';
    adicionarMensagem('Selecione um contato para conversar! üë•', 'received', elementos);
  }
}

// ===== ENVIAR MENSAGEM =====
function enviarMensagem(elementos) {
  const texto = elementos.inputMensagem.value.trim();
  if (!texto) return;
  
  console.log(`üì§ Enviando: "${texto}" (modo: ${modoChat})`);
  
  // Adicionar mensagem do usu√°rio
  adicionarMensagem(texto, 'sent', elementos);
  elementos.inputMensagem.value = '';
  
  if (modoChat === 'ai') {
    // Mostrar "digitando..."
    const typingMsg = adicionarMensagem('ü§ñ Digitando...', 'received typing', elementos);
    
    // Chamar IA real
    chamarGeminiAPI(texto, elementos, typingMsg);
    
  } else if (modoChat === 'user' && contatoAtivo) {
    // Simular resposta do contato
    setTimeout(() => {
      const respostas = [
        'Entendi! Obrigado por compartilhar isso.',
        'Que interessante! Me conte mais sobre isso.',
        'Estou aqui se precisar conversar.',
        'Como voc√™ est√° se sentindo sobre isso?',
        'Isso faz muito sentido!'
      ];
      const resposta = respostas[Math.floor(Math.random() * respostas.length)];
      adicionarMensagem(resposta, 'received', elementos);
    }, 1000);
  }
}

// ===== CHAMAR API DO GEMINI =====
async function chamarGeminiAPI(mensagem, elementos, typingMsg) {
  try {
    console.log("ü§ñ Tentando Google Gemini API...");
    
    // Tentar API do Gemini primeiro
    const resposta = await tentarGeminiAPI(mensagem);
    
    // Remover "digitando..."
    if (typingMsg && typingMsg.parentNode) {
      typingMsg.parentNode.removeChild(typingMsg);
    }
    
    // Mostrar resposta
    adicionarMensagem(resposta, 'received', elementos);
    console.log("‚úÖ Resposta obtida com sucesso");
    
  } catch (error) {
    console.log("‚ö†Ô∏è API falhou, usando IA local inteligente...", error.message);
    
    // Remover "digitando..." se ainda estiver l√°
    if (typingMsg && typingMsg.parentNode) {
      typingMsg.parentNode.removeChild(typingMsg);
    }
    
    // Usar IA local como fallback
    const respostaLocal = obterRespostaIALocal(mensagem);
    adicionarMensagem(respostaLocal, 'received', elementos);
  }
}

// ===== TENTAR API DO GEMINI =====
async function tentarGeminiAPI(mensagem) {
  const requestBody = {
    contents: [{
      parts: [{ text: criarPromptEmocional(mensagem) }]
    }],
    generationConfig: {
      temperature: 0.7,
      topK: 40,
      topP: 0.95,
      maxOutputTokens: 512,
    }
  };
  
  const response = await fetch(GEMINI_API_URL, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(requestBody)
  });
  
  if (!response.ok) {
    throw new Error(`API Error: ${response.status}`);
  }
  
  const data = await response.json();
  
  if (data.candidates && data.candidates[0] && data.candidates[0].content) {
    return data.candidates[0].content.parts[0].text;
  } else {
    throw new Error("Invalid response format");
  }
}

// ===== IA LOCAL INTELIGENTE (FALLBACK) =====
function obterRespostaIALocal(mensagem) {
  console.log("üß† Usando IA local inteligente...");
  
  const msgLower = mensagem.toLowerCase();
  
  // An√°lise emocional avan√ßada
  const contextosEmocionais = {
    // Sentimentos negativos - MELHORADOS
    mal_estar: {
      keywords: ["n√£o estou bem", "nao estou bem", "me sinto mal", "n√£o t√¥ bem", "nao to bem", "estou mal", "n√£o me sinto bem"],
      respostas: [
        "Percebo que voc√™ est√° passando por um momento dif√≠cil agora. üíô N√£o estar bem √© um sinal importante que seu corpo e mente est√£o te dando. Voc√™ consegue identificar o que pode estar contribuindo para esse sentimento? √Äs vezes pode ser cansa√ßo, estresse, alguma situa√ß√£o espec√≠fica...",
        "Sinto muito que voc√™ esteja se sentindo assim. ü§ó √â corajoso reconhecer e expressar que n√£o est√° bem - muitas pessoas guardam isso para si. Voc√™ gostaria de compartilhar o que est√° te deixando dessa forma? Estou aqui para te ouvir sem julgamento.",
        "Obrigada por confiar em mim esse sentimento. üå∏ Quando dizemos 'n√£o estou bem', geralmente h√° v√°rias camadas por tr√°s disso. Pode ser algo f√≠sico, emocional, ou uma mistura. Que tal come√ßarmos identificando: voc√™ diria que √© mais uma sensa√ß√£o f√≠sica ou emocional?"
      ]
    },
    
    tristeza: {
      keywords: ["triste", "tristeza", "deprimido", "sozinho", "vazio", "chateado", "melancolia", "down"],
      respostas: [
        "A tristeza √© uma emo√ß√£o profunda e v√°lida. üíß Ela nos conecta com nossa humanidade e, √†s vezes, nos ajuda a processar perdas ou mudan√ßas importantes. O que voc√™ acha que pode estar por tr√°s dessa tristeza? Algo espec√≠fico aconteceu ou √© um sentimento mais geral?",
        "Reconhe√ßo a coragem que √© preciso para falar sobre tristeza. ü§≤ Esse sentimento, embora doloroso, faz parte da experi√™ncia humana. Voc√™ tem se permitido sentir essa emo√ß√£o ou tem tentado 'empurrar para longe'? √Äs vezes, acolher a tristeza √© o primeiro passo para compreend√™-la.",
        "Sinto sua dor atrav√©s das suas palavras. üåô A tristeza pode parecer um buraco sem fundo, mas ela tem um prop√≥sito - nos convida a parar, refletir e cuidar de n√≥s mesmos. Como voc√™ tem se cuidado durante esse per√≠odo? Voc√™ tem uma rede de apoio pr√≥xima?"
      ]
    },

    ansiedade: {
      keywords: ["ansioso", "ansiosa", "nervoso", "nervosa", "preocupado", "preocupada", "angustiado", "tenso", "estressado", "p√¢nico", "inquieto"],
      respostas: [
        "A ansiedade pode ser realmente intensa e desconfort√°vel. ü´Å Vamos come√ßar com sua respira√ß√£o - voc√™ percebe se est√° respirando mais r√°pido ou de forma mais superficial agora? √Äs vezes, focar na respira√ß√£o j√° traz um al√≠vio inicial. Inspire profundamente por 4 segundos, segure por 4, solte por 6.",
        "Entendo como a ansiedade pode ser avassaladora. ÔøΩÔ∏è Ela geralmente vem com pensamentos acelerados e sensa√ß√µes f√≠sicas intensas. Voc√™ consegue me contar se h√° algo espec√≠fico que est√° te deixando ansioso(a) ou se √© mais uma sensa√ß√£o geral de inquieta√ß√£o?",
        "A ansiedade √© como um alarme interno que √†s vezes dispara quando n√£o h√° perigo real. ÔøΩ Vamos tentar identificar: existem pensamentos espec√≠ficos circulando na sua mente agora? E fisicamente, onde voc√™ sente mais tens√£o - no peito, est√¥mago, ombros?"
      ]
    },
    
    felicidade: {
      keywords: ["feliz", "alegre", "bem", "√≥timo", "excelente", "maravilhoso", "animado", "contente", "radiante"],
      respostas: [
        "Que energia maravilhosa! ‚ú® Sua alegria √© contagiante at√© atrav√©s desta tela. √â lindo quando conseguimos reconhecer e celebrar nossos momentos de bem-estar. O que est√° trazendo essa felicidade para sua vida hoje? Merece ser celebrado!",
        "Fico genuinamente feliz em sentir sua alegria! üåü Momentos assim s√£o presentes que a vida nos d√°. Voc√™ consegue identificar o que contribuiu para esse estado de esp√≠rito? √â importante reconhecermos esses 'ingredientes' da felicidade para cultiv√°-los mais.",
        "Sua felicidade ilumina nossa conversa! üòä √â inspirador ver algu√©m em um momento positivo. Que tal guardarmos esse sentimento? Anote mentalmente ou fisicamente o que est√° sentindo agora - ser√° um tesouro para os dias mais desafiadores."
      ]
    },
    
    tcc_estudo: {
      keywords: ["tcc", "monografia", "disserta√ß√£o", "estudo", "estudar", "apresenta√ß√£o", "defesa", "faculdade", "universidade", "prova", "trabalho acad√™mico", "formatura"],
      respostas: [
        "O TCC √© uma montanha que parece imposs√≠vel de escalar, n√£o √©? üìö Mas olha s√≥ - voc√™ chegou at√© aqui! Isso j√° demonstra sua capacidade e determina√ß√£o. Vamos quebrar esse 'monstro' em partes menores? Qual etapa est√° te causando mais ansiedade: a pesquisa, a escrita ou a apresenta√ß√£o?",
        "A jornada acad√™mica tem suas press√µes √∫nicas, e o TCC √© definitivamente o grande desafio final. üéì √â normal sentir ansiedade - voc√™ est√° criando algo original e significativo! Me conta: o que mais te preocupa no processo? Prazos, conte√∫do, orientador, ou a apresenta√ß√£o final?",
        "Reconhe√ßo a press√£o acad√™mica que voc√™ est√° enfrentando. üìñ O TCC representa n√£o apenas uma nota, mas toda sua jornada de aprendizado. Lembra: n√£o precisa ser perfeito, precisa ser SEU. Como posso te ajudar a organizar os pr√≥ximos passos de forma mais leve e manej√°vel?"
      ]
    },
    
    motivacao: {
      keywords: ["desistir", "n√£o consigo", "nao consigo", "dif√≠cil", "imposs√≠vel", "sem for√ßas", "cansado", "fracasso", "des√¢nimo", "sem esperan√ßa"],
      respostas: [
        "Reconhe√ßo essa sensa√ß√£o de esgotamento, e quero que saiba que ela √© temporal, n√£o permanente. üí™ O fato de voc√™ estar aqui, expressando isso, j√° mostra que ainda h√° uma chama dentro de voc√™. N√£o √© sobre n√£o sentir cansa√ßo - √© sobre encontrar pequenos passos poss√≠veis mesmo quando tudo parece imposs√≠vel.",
        "Compreendo que tudo pare√ßa uma montanha intranspon√≠vel agora. üèîÔ∏è Mas vamos fazer um exerc√≠cio: olhe para tr√°s e veja quantas 'montanhas imposs√≠veis' voc√™ j√° escalou na vida. Voc√™ tem mais for√ßa e recursos internos do que imagina neste momento de cansa√ßo.",
        "Primeiro, respire fundo. üå¨Ô∏è Segundo, saiba que sentir vontade de desistir n√£o √© fracasso - √© um sinal de que voc√™ precisa de cuidado e, talvez, uma nova estrat√©gia. Que tal come√ßarmos identificando UMA coisa pequena e concreta que voc√™ pode fazer hoje? Pequenos passos tamb√©m s√£o progresso."
      ]
    },
    
    sono_cansaco: {
      keywords: ["cansado", "cansada", "sono", "dormir", "ins√¥nia", "acordar", "noite", "descanso", "exausto", "exausta"],
      respostas: [
        "O cansa√ßo pode afetar tudo - nosso humor, concentra√ß√£o, capacidade de lidar com desafios. üò¥ √â como se nosso 'sistema operacional' estivesse rodando devagar. Me conta: √© mais um cansa√ßo f√≠sico, mental, ou emocional? E como tem sido seu sono ultimamente?",
        "Entendo essa exaust√£o. üåô √Äs vezes nosso corpo e mente est√£o pedindo uma pausa real. Voc√™ tem conseguido descansar de qualidade ou tem sido mais um 'descanso de apar√™ncia'? Vamos pensar juntos em estrat√©gias para um descanso mais reparador.",
        "O cansa√ßo √© um sinal importante que n√£o devemos ignorar. ‚ö° Pode ser f√≠sico, mas tamb√©m pode ser nosso jeito de processar estresse ou sobrecarga emocional. Quando foi a √∫ltima vez que voc√™ teve um momento s√≥ seu, sem press√µes ou obriga√ß√µes? Autocuidado n√£o √© luxo, √© necessidade."
      ]
    },
    
    relacionamentos: {
      keywords: ["fam√≠lia", "amigos", "relacionamento", "namorado", "namorada", "pais", "conflito", "briga", "discuss√£o", "sozinho", "sozinha", "incompreendido"],
      respostas: [
        "Relacionamentos s√£o uma das partes mais complexas e importantes da vida. üíù Cada pessoa traz sua hist√≥ria, expectativas e formas de se comunicar. Me conta um pouco mais sobre essa situa√ß√£o - √© um conflito espec√≠fico ou mais um sentimento geral sobre como as coisas est√£o?",
        "√â doloroso quando nos sentimos desconectados das pessoas importantes em nossas vidas. ü§ù Comunica√ß√£o √© uma arte que todos estamos sempre aprendendo. Voc√™ j√° conseguiu expressar seus sentimentos abertamente para essa pessoa? √Äs vezes, mal-entendidos s√£o mais simples de resolver do que imaginamos.",
        "Relacionamentos exigem paci√™ncia, compreens√£o m√∫tua e, principalmente, comunica√ß√£o honesta. üí¨ Cada pessoa tem sua linguagem de amor e forma de demonstrar afeto. Como voc√™ costuma expressar carinho e como prefere receber? √Äs vezes, as pessoas falam 'idiomas emocionais' diferentes."
      ]
    }
  };
  
  // Encontrar o contexto mais apropriado
  let melhorContexto = null;
  let maiorPontuacao = 0;
  
  for (const [nome, contexto] of Object.entries(contextosEmocionais)) {
    const pontos = contexto.keywords.filter(keyword => msgLower.includes(keyword)).length;
    if (pontos > maiorPontuacao) {
      maiorPontuacao = pontos;
      melhorContexto = contexto;
    }
  }
  
  // Se encontrou um contexto espec√≠fico
  if (melhorContexto && maiorPontuacao > 0) {
    return melhorContexto.respostas[Math.floor(Math.random() * melhorContexto.respostas.length)];
  }
  
  // Sauda√ß√µes
  if (msgLower.includes('oi') || msgLower.includes('ol√°') || msgLower.includes('ola')) {
    const saudacoes = [
      "Ol√°! üëã Que bom ter voc√™ aqui. Como est√° se sentindo hoje? Estou aqui para te ouvir e apoiar no que precisar.",
      "Oi! ‚ú® √â um prazer conversar com voc√™. Este √© um espa√ßo seguro para compartilhar seus pensamentos e sentimentos. O que trouxe voc√™ at√© aqui hoje?",
      "Seja muito bem-vindo(a)! üåü Estou aqui como sua companhia virtual no EmoConnect. Como posso te apoiar hoje? Fique √† vontade para compartilhar o que estiver sentindo."
    ];
    return saudacoes[Math.floor(Math.random() * saudacoes.length)];
  }
  
  // Despedidas
  if (msgLower.includes('tchau') || msgLower.includes('obrigado') || msgLower.includes('obrigada')) {
    const despedidas = [
      "Foi um prazer conversar com voc√™! üíô Lembre-se: voc√™ √© mais forte do que imagina. Volte sempre que precisar. Cuide-se bem!",
      "Obrigada por compartilhar seus sentimentos comigo. üå∏ Estar aqui, buscando apoio, j√° mostra sua coragem. Estarei sempre aqui quando precisar. At√© mais!",
      "Que nossa conversa tenha te trazido algum conforto. ‚ú® Voc√™ merece cuidado, compreens√£o e felicidade. N√£o hesite em voltar. Um abra√ßo virtual! ü§ó"
    ];
    return despedidas[Math.floor(Math.random() * despedidas.length)];
  }
  
  // Respostas gerais emp√°ticas - MELHORADAS
  const respostasGerais = [
    "Percebo que h√° algo importante nas suas palavras. üíô Cada sentimento que voc√™ compartilha √© v√°lido e merece aten√ß√£o. Como voc√™ est√° se sentindo ao falar sobre isso aqui comigo? √Äs vezes, colocar os pensamentos em palavras j√° traz um al√≠vio inicial.",
    "Estou aqui para te ouvir com todo o cuidado e sem qualquer julgamento. ü§ó Sua coragem de compartilhar seus sentimentos mostra uma pessoa que busca crescimento e bem-estar. H√° algo espec√≠fico sobre essa situa√ß√£o que est√° mais pesado no seu cora√ß√£o?",
    "Obrigada por confiar em mim seus pensamentos. üå± O autoconhecimento √© uma jornada cont√≠nua e nem sempre f√°cil. Que insights voc√™ tem sobre seus pr√≥prios sentimentos? E como costuma cuidar de si mesmo(a) em momentos assim?",
    "Suas reflex√µes mostram uma pessoa consciente e que valoriza seu bem-estar emocional, e isso √© admir√°vel. ‚ú® Todos n√≥s passamos por momentos de incerteza e busca por clareza. O que voc√™ sente que mais precisa agora - ser ouvido(a), encontrar estrat√©gias pr√°ticas, ou apenas processar esses sentimentos?",
    "√â significativo termos um espa√ßo seguro para processar nossos pensamentos e emo√ß√µes. üçÉ Vejo que voc√™ est√° refletindo sobre aspectos importantes da sua vida. Como posso te apoiar melhor neste momento? Prefere explorar mais profundamente esses sentimentos ou buscar estrat√©gias pr√°ticas?"
  ];
  
  return respostasGerais[Math.floor(Math.random() * respostasGerais.length)];
}

// ===== CRIAR PROMPT EMOCIONAL =====
function criarPromptEmocional(mensagem) {
  const promptSistema = `Voc√™ √© a assistente virtual do EmoConnect, uma plataforma de apoio emocional e mental.

INSTRU√á√ïES IMPORTANTES:
- Voc√™ √© emp√°tica, acolhedora e profissional
- Foque em bem-estar emocional e mental
- Ofere√ßa apoio genu√≠no sem dar conselhos m√©dicos
- Use emojis apropriados mas com modera√ß√£o
- Mantenha conversas em portugu√™s brasileiro
- Seja uma companhia amig√°vel e compreensiva

CONTEXTO:
O usu√°rio est√° buscando apoio emocional atrav√©s desta plataforma. Trate cada conversa como √∫nica e importante.

MENSAGEM DO USU√ÅRIO: ${mensagem}

Responda de forma natural, emp√°tica e √∫til:`;

  return promptSistema;
}

// ===== ADICIONAR MENSAGEM =====
function adicionarMensagem(texto, tipo, elementos) {
  const div = document.createElement('div');
  div.className = `message ${tipo}`;
  
  const timestamp = new Date().toLocaleTimeString();
  div.innerHTML = `${texto}<div class="timestamp">${timestamp}</div>`;
  
  elementos.chatBox.appendChild(div);
  elementos.chatBox.scrollTop = elementos.chatBox.scrollHeight;
  
  return div; // Retornar elemento para poder remover depois
}

// ===== PESQUISAR CONTATOS =====
function pesquisarContatos(termo, elementos) {
  if (!elementos.containerContatos) return;
  
  const items = elementos.containerContatos.querySelectorAll('.contact-item');
  
  items.forEach(item => {
    const nome = item.querySelector('.contact-name').textContent.toLowerCase();
    const match = nome.includes(termo.toLowerCase());
    item.style.display = match ? 'flex' : 'none';
  });
}

// ===== CONFIGURAR MODO INICIAL =====
function configurarModoInicial(elementos) {
  // Modo inicial: user
  mudarModo('user', elementos);
  
  // Mensagem inicial
  adicionarMensagem('Bem-vindo ao EmoConnect! üåü Selecione um contato ou mude para o modo IA.', 'received', elementos);
  
  console.log("‚úÖ Modo inicial configurado");
}

// ===== TEMA ESCURO =====
document.addEventListener('DOMContentLoaded', function() {
  const toggleBtn = document.getElementById('toggle-theme');
  if (toggleBtn) {
    const isDark = localStorage.getItem('tema') === 'dark';
    if (isDark) {
      document.body.classList.add('dark-mode');
      toggleBtn.textContent = '‚òÄÔ∏è';
    }
    
    toggleBtn.addEventListener('click', () => {
      document.body.classList.toggle('dark-mode');
      const isDarkMode = document.body.classList.contains('dark-mode');
      localStorage.setItem('tema', isDarkMode ? 'dark' : 'light');
      toggleBtn.textContent = isDarkMode ? '‚òÄÔ∏è' : 'üåô';
    });
  }
});

console.log("‚úÖ Chat EmoConnect carregado!");